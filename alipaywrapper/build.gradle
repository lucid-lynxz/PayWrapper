apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion
    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion

        versionCode 1
        versionName "1.0.2"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    // 注意: 鉴于在 module 中又依赖 aar 文件会导致集成配置步骤变多
    // 因此本module直接解压sdk aar文件, 将相关资源拷贝到对应位置
    // 原始aar文件放在目录 alipaywrapper/oriAar/ 下
    // todo 2020.4.5 后续编写gradle脚本自动解压分配,避免人工操作
    // tood 2020.4.5 注意: 提取aar中的 manifest.xml 后, 需要对包名,最低版本号等数据进行处理
    api fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation(test.junit)
    androidTestImplementation(test.espresso)
    androidTestImplementation(test.testRunner)

    // 需要kotlin支持
    compileOnly(libs.kotlinLib)

    // 基础库
//    if (useMavenVersion) {
//        compileOnly 'org.lynxz.basepaywrapper:basepaywrapper:1.0.0'
//    } else {
    compileOnly project(path: ":basepaywrapper")
//    }
}

publish {
    // 读取配置的信息
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintrayUser = properties.getProperty('user') // 用户名
    bintrayKey = properties.getProperty('apikey') // bintray 的 apikey ,可以在通过账户信息的 edit profile 中查询得到
    dryRun = false

    userOrg = 'lucid-lynxz'
    groupId = 'org.lynxz.alipaywrapper' // 填包名就好
    artifactId = 'alipaywrapper'  // bintray中对应的packagename,大小写敏感
    uploadName = 'alipaywrapper' // rbintray中对应的maven product名称,默认为artifactId, 大小写敏感
    publishVersion = '1.0.2' // 发布版本号
    desc = '发起支付宝支付,并回调通知用户结果'
    website = 'https://github.com/lucid-lynxz/PayWrapper.git'
}